<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="axMapControl1.OcxState" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACFTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5BeEhvc3QrU3RhdGUBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAbhIAAAIB
        AAAAAQAAAAAAAAAAAAAAAFkSAAALAAAAAgAAAAEAAAAKAAAAAQAAAAkAAAAADTsAAAcsAAAAAAEAAAAB
        AAAAAAAAAAAAAAAAAAAADQAAAAAAAAAAAAAAAAAAAAAA//8A//92qr3mNU3QEZi+AIBffO0hAAAAADQA
        CAAAAE0AYQBwAAAAAgAAAAAAgHqoptEdshG/UQgAICL1cwEAAAAHAKgAAABHRU9HQ1NbIkdDU19XR1Nf
        MTk4NCIsREFUVU1bIkRfV0dTXzE5ODQiLFNQSEVST0lEWyJXR1NfMTk4NCIsNjM3ODEzNy4wLDI5OC4y
        NTcyMjM1NjNdXSxQUklNRU1bIkdyZWVud2ljaCIsMC4wXSxVTklUWyJEZWdyZWUiLDAuMDE3NDUzMjky
        NTE5OTQzM10sQVVUSE9SSVRZWyJFUFNHIiw0MzI2XV0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgGbAAAAA
        AACAZkABAAAAAAAAAHnAAAAAAAAAecB7FK5H4XqkQgAAAAAAavjAAAAAAACIw0AAAAAAAGr4wAAAAAAA
        iMNAwUVOXopKQz78qfHSTWJQP/yp8dJNYlA/AQAAAAIAWgwAAAAAAABRpmPmrYrQEb7HAIBffEJoAgAA
        ACIADgAAAG8AdQB0AHAAdQB0AAAAMAAAAFMAaABhAHAAZQBmAGkAbABlACAARgBlAGEAdAB1AHIAZQAg
        AEMAbABhAHMAcwAAAP//AAAAANBGiBlCytERqnwAwE+jOhUDAAAAAgAOAAAAbwB1AHQAcAB1AHQAAAAC
        AAAAAAAwAAAAUwBoAGEAcABlAGYAaQBsAGUAIABGAGUAYQB0AHUAcgBlACAAQwBsAGEAcwBzAAAADAAA
        AFMAaABhAHAAZQAAAAMAAAABAAAAAAARADVacePREaqCAMBPozoVBAAAAAEAfAAAAEMAOgBcAFUAcwBl
        AHIAcwBcAHIAaAB3AFwARABlAHMAawB0AG8AcABcADEAOQAwADYAMQA4AEUAeABjAGUAbABUAG8ATABp
        AG4AZQBcADEAOQAwADYAMQA4AEUAeABjAGUAbABUAG8ATABpAG4AZQBcAGQAYQB0AGEAAAACAAAAAAAe
        AAAAUwBoAGEAcABlAGYAaQBsAGUAIABEAGEAdABhAAAAEVqOWJvQ0RGqfADAT6M6FQUAAAABAAEAAAAS
        AAAARABBAFQAQQBCAEEAUwBFAAAACAB8AAAAQwA6AFwAVQBzAGUAcgBzAFwAcgBoAHcAXABEAGUAcwBr
        AHQAbwBwAFwAMQA5ADAANgAxADgARQB4AGMAZQBsAFQAbwBMAGkAbgBlAFwAMQA5ADAANgAxADgARQB4
        AGMAZQBsAFQAbwBMAGkAbgBlAFwAZABhAHQAYQAAAAGW22qgXNnREaqBAMBPozoVAAAAAAAAAVhD83lX
        0BGYvwCAX3ztIQYAAAADAPnlFHmSyNARi7YIAAnuTkEHAAAAAQCWxOl+I9HQEYODCAAJuZbMCAAAAAEA
        AQAAUL+SW72TQEB+t1E2AxZKQEr2HE5fvkRAAAAAAAAAAADwPwAAAAANAAAAAAAAAKJefBYgr9ERiBcI
        AAnscyoJAAAAAwD/////AgAAAAAAAQAAAKNefBYgr9ERiBcIAAnscyoKAAAAAgD55RR5ksjQEYu2CAAJ
        7k5BBwAAAAIAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAAAAAAAAAAAAAC
        AAAAAAAAAAAAAgAAAAAAAQAAAAAAAAAAAAIAAAAAAAIAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAgHZAAAAAAACAdkAAAAAAAIB2QAEAAAAAAAIAAAAAAJqZmZmZmbk/AAAAAAAAWUAA
        AAAAAAAAAAAAAAAAAAAABgAAAEkAZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAgAAAAAAAgAAAAAAAAAAAAMAAAAIAAAARgBJAEQAAAAtrrqim5bSEa53CAAJ7HMqCwAAAAQA//8A
        AAgAAABGAEkARAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP//DAAAAFMAaABhAHAAZQAAAC2uuqKb
        ltIRrncIAAnscyoMAAAABAD//wAADAAAAFMAaABhAHAAZQAAAAAAAAAAAAAAAAAAAAAAAAD///////8A
        AAAABgAAAEkAZAAAAC2uuqKbltIRrncIAAnscyoNAAAABAD//wAABgAAAEkAZAAAABlHT35UjtIRqtgA
        AAAAAAAOAAAAAQAAAAAAAAAAAAAAAAAMAAAAAAAAAAAA////////AAAAAPNJWB0zDdIRom8IAAm28isP
        AAAAAgABAAAARUEAARwN0hGibwgACbbyKxAAAAAHAAoAAABbAEkAZABdAAAA//8AAAAAAAAAAAEAAAD/
        /wAA////////AAAAAAAAAAAAAAAAAAAAAP//EAAAAEQAZQBmAGEAdQBsAHQAAAACAAAAAAB0Plq2kynR
        EZpDAIDH7FyWEQAAAAQAlsTpfiPR0BGDgwgACbmWzBIAAAABAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/////wMAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANAAAAAAAAAJbE6X4j0dAR
        g4MIAAm5lswTAAAAAQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAWUAAAAAAAABZQAEAAAAAAAAAAAAAAAAAAAAAAIBWQAF2Plq2kynR
        EZpDAIDH7FyWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAgQAAAAAAA
        AAAAAAAAQAAAAAAAAAAAAAAAAAAAAAADUuMLkY/OEZ3jAKoAS7hRFAAAAAGGAACQAYA4AQAEy87M5f//
        kZsJ15jinkmXV3K7OeVc8wAAiVJT7slB0RGICggACexzKhUAAAAGAAAAAAAAAAAAAAADAAAAAQAAAIyV
        QiQR19IRn0EAwE9rxqUWAAAAAgD//wAAAAAAAAAA//8AAAAA//8AAAAAAAAAAAAAAAAAAHdDGibV2dIR
        qAbMn4cLzVoXAAAAAQAAAAAAAwAAAAMAAAADAAAAAAAAAAAAAAADAAAAAwAAAAMAAAAAAAAAAAAAAAMA
        AAADAAAAAwAAAAAAAAD//wAAAAAAAAAAAAAAAAAAckMaJtXZ0hGoBsyfhwvNWhgAAAABAAIAAAACAAAA
        AQAAAAIAAAACAAAAAwAAAAMAAAADAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAIAAAAAAAAA
        AAAAAAAA//8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAiEu71aHg0hGfTQDAT2vHjhkAAAABAAAA
        AAAAAAAA//8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAABAAAARAAAAAAAAADJDv33FfJ/TrH4lLoOtgO5AQARWo5Ym9DREap8
        AMBPozoVGgAAAAEAAQAAAB4AAABTAGUAcgB2AGkAYwBlAEwAYQB5AGUAcgBJAEQAAAADAAAAAAAAAAAA
        AADwv/nlFHmSyNARi7YIAAnuTkEbAAAAAQCWxOl+I9HQEYODCAAJuZbMHAAAAAEAAQAANtsg+UBpVkAQ
        /aP9xsJJwPZslxj4TDDAAQAAAAAAAAAAQAAAAAANAAAAAAAAAP//AwAAABJycDDVUtARqPIAYIyF7eUd
        AAAAAwAAAAAAAIBmwAAAAAAAgFbAAAAAAACAZkAAAAAAAIBWQAAAAACAeqim0R2yEb9RCAAgIvVzHgAA
        AAcAqAAAAEdFT0dDU1siR0NTX1dHU18xOTg0IixEQVRVTVsiRF9XR1NfMTk4NCIsU1BIRVJPSURbIldH
        U18xOTg0Iiw2Mzc4MTM3LjAsMjk4LjI1NzIyMzU2M11dLFBSSU1FTVsiR3JlZW53aWNoIiwwLjBdLFVO
        SVRbIkRlZ3JlZSIsMC4wMTc0NTMyOTI1MTk5NDMzXSxBVVRIT1JJVFlbIkVQU0ciLDQzMjZdXQAAAAAA
        AAAAAAAAAAAAAAAAAAAAAACAZsAAAAAAAIBmQAEAAAAAAAAAecAAAAAAAAB5wHoUrkfheqRCAAAAAABq
        +MAAAAAAAIjDQAAAAAAAavjAAAAAAACIw0DBRU5eikpDPvyp8dJNYlA//Knx0k1iUD+hf/94L/vREZSi
        CAAJ7r7LHwAAAAEAAUVBAAEcDdIRom8IAAm28isAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//8A
        AAAAAAAAAAAAAAAAAP//AAD//wIAAAAAAAIAAAAAAAIAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAIAAAAAAAIAAAAAAAIAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAIAAAAAAAIAAAAAAAIAAAAA
        AAIAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAIAAAAAAAIAAAAAAAEAAAAAAAAAAAAAAAQAAAAAAAAAAAAA
        AAgAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////g7tGlhKV0hGi9ggACbbyKyAAAAAGAAEAAAAAAAAAFAAA
        ADwARABlAGYAYQB1AGwAdAA+AAAA/////wAAAAAAAAAAAAAAAAAAAAAAAAMAAAABAAAAAQAAAHI5j86+
        6dERojIIAAm28ishAAAABAAAAAAAAAAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAgHqo
        ptEdshG/UQgAICL1cwEAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwGjAAAAAAADAWMAA
        AAAAAMBoQAAAAAAAwFhACwAAAAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAAAAAAAAAAAAAAAAAAA
        AEAvNRyOKdMRn08AwE9rxhkiAAAAAQAGIQkUjpjjvwYhCRSOmOM/AAAAAAAA4D8AAAAAAAAIQP//AAAA
        CAAAAAD//wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAA//8A
        AAAAAAAAAAAAAAAAAAAAVj3H4IhsjEm3fHhgbmiMlyMAAAACAAAAlsTpfiPR0BGDgwgACbmWzCQAAAAB
        AAEAAOAcWKwERkxACRdoUZA5U0CCorjUngZRQAEAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAgAAAAAA
        //8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAA//8KAAAAAAAAAABAj0AAAAAAAIjD
        QAAAAAAAcNdAAAAAAABq+EAAAAAAgIQOQQAAAACAhB5BAAAAAGDjJkEAAAAAgIQuQQAAAABg40ZBAAAA
        ANASY0EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////wIAAAAAAP//CgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAgAAAAAAAAAAAAAAAAD0AQAAAAAAAAAA/////ws=
</value>
  </data>
  <data name="axLicenseControl1.OcxState" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACFTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5BeEhvc3QrU3RhdGUBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAALgAAAAIB
        AAAAAQAAAAAAAAAAAAAAABkAAAABAAAAAgAAAAEAAAAKAAAAAQAAAAkAAAAACw==
</value>
  </data>
</root>